% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssh_connector.R
\name{ssh_connector}
\alias{ssh_connector}
\title{SSH connector}
\usage{
ssh_connector(
  data = teal.data::teal_data(),
  join_keys = teal.data::join_keys(),
  host = NULL,
  paths = list(),
  read_expression = quote(utils::read.csv(file = path, header = TRUE)),
  title = shiny::h1(shiny::code("teal"), " - Access data from SSH")
)
}
\arguments{
\item{data}{(\code{teal_data}) object. App developer can pass \code{data} as \code{teal_data} object with
some initial data.}

\item{join_keys}{(\code{join_keys} or single \code{join_key_set})
optional object with datasets column names used for joining.
If empty then no joins between pairs of objects.}

\item{host}{(\code{character}) an ssh server string of the form \verb{hostname[:port]}.
An \code{ipv6} hostname should be wrapped in brackets like this: \verb{[2001:db8::1:80]}.}

\item{paths}{(named \code{list} of file paths) the paths to the files containing the
data on the remote server. The names of the list will define the data names
that will be used to store the data on the \code{teal.data} object.}

\item{read_expression}{(quoted \code{call}) a call that will be
used by the connector to read the contents of the file.
This \code{call} can be created with \code{\link[=quote]{quote()}} or \code{\link[=substitute]{substitute()}} functions.
Note that the \code{path} variable is defined in the connector code and should be
used in the expression.
It defaults to \code{utils::read.csv(file = path, header = TRUE)}.}

\item{title}{(\code{shiny.tag}) a title for the connector.`}
}
\value{
\code{\link[teal:teal_data_module]{teal::teal_data_module()}} object.
}
\description{
This connector allows to read data from SSH remote server during \code{teal} session.
}
\examples{
library(teal)
x <- ssh_connector(
  paths = list(ADSL = "/path/to/ADSL.csv", ADTTE = "/path/to/ADTTE.csv")
)

app <- init(
  data = x,
  modules = list(example_module())
)
if (interactive()) {
  shiny::runApp(app)
}

# Example with host defined explicitly
x <- ssh_connector(
  paths = list(ADSL = "/path/to/ADSL.csv", ADTTE = "/path/to/ADTTE.csv"),
  host = "localhost",
  read_expression = quote(utils::read.csv(file = path, header = TRUE))
)

app <- init(
  data = x,
  modules = list(example_module())
)
if (interactive()) {
  shiny::runApp(app)
}
}
